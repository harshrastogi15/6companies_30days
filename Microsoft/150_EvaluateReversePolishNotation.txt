class Solution {
public:
    int evalRPN(vector<string>& tokens) {
        stack<long long> st;
        for(auto &i : tokens){
            if(i=="+"){
                long long num1 = st.top();
                st.pop();
                long long num2 = st.top();
                st.pop();
                st.push(num1+num2);
            }else if(i=="-"){
                long long num1 = st.top();
                st.pop();
                long long num2 = st.top();
                st.pop();
                st.push(num2-num1);
            }else if(i=="*"){
                long long num1 = st.top();
                st.pop();
                long long num2 = st.top();
                st.pop();
                st.push(num2*num1);
            }else if(i=="/"){
                long long num1 = st.top();
                st.pop();
                long long num2 = st.top();
                st.pop();
                st.push(num2/num1);
            }else{
                string s = i;
                long long num = 0;
                for(auto &j: s){
                    if(j=='-'){continue;}
                    num = num*10+(j-'0');
                }
                if(s[0]=='-'){
                    num = 0-num;
                }
                // cout<<num<<"\n";
                st.push(num);
            }
        }
        // cout<<st.top()<<"\n";
        return st.top();
    }
};